#!/bin/sh
#
# repeat - repeat a command a fixed number of times
#
# @(#) $Revision: 1.1 $
# @(#) $Id: repeat,v 1.1 2004/04/24 13:23:04 chongo Exp $
# @(#) $Source: /usr/local/src/cmd/repeat/RCS/repeat,v $
#
# Copyright (c) 2004 by Landon Curt Noll.  All Rights Reserved.
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted,
# provided that the above copyright, this permission notice and text
# this comment, and the disclaimer below appear in all of the following:
#
#       supporting documentation
#       source copies
#       source works derived from this source
#       binaries derived from this source or from derived source
#
# LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
# EVENT SHALL LANDON CURT NOLL BE LIABLE FOR ANY SPECIAL, INDIRECT OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
# USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# chongo (Landon Curt Noll, http://www.isthe.com/chongo/index.html) /\oo/\
#
# Share and enjoy! :-)

# parse args
#
if [[ $# -lt 2 ]]; then
    echo "usage: $0 count cmd [arg ...]" 1>&2
    exit 1
fi
COUNT="$1"
case "$COUNT" in
[0-9]*) ;;
*) echo "$0: count must be a number >= 0" 1>&2
   exit 2 ;;
esac

# execute command until the count is 0
#
STATUS=0
shift
while [[ "$COUNT" -gt 0 ]]; do
    $@
    STATUS="$?"
    ((COUNT--))
done
exit "$STATUS"
